#pragma once
/********************************************************************
//    Created:     2024/06/03  10:42:44
//    File Name:   D:\XEngine\XEngine_SourceCode\XEngine_AVCodec\XEngine_AVFormat\AVFormat_Define.h
//    File Path:   D:\XEngine\XEngine_SourceCode\XEngine_AVCodec\XEngine_AVFormat
//    File Base:   AVFormat_Define
//    File Ext:    h
//    Project:     XEngine(网络通信引擎)
//    Author:      qyt
//    Purpose:     音视频文件封装模块导出函数
//    History:
*********************************************************************/
//////////////////////////////////////////////////////////////////////////
//                      回调函数
//////////////////////////////////////////////////////////////////////////
//读写回调,参数:自定义参数,缓冲区,缓冲区大小
typedef int(*CALLBACK_XENGINE_AVCODEC_AVFORMAT_PACKETRW)(XPVOID lParam, uint8_t* puszMsgBuffer, int nSize);
//转换器回调函数,参数:句柄,当前转换帧类型(-1未指定,0VIDEO,1AUDIO)(UNPack表示当前流索引),当前转换帧编号,当前转换时间,自定义参数
typedef void(CALLBACK *CALLBACK_XENGINE_AVCODEC_AVFORMAT_NOTIFY)(XHANDLE xhNet, int nCvtType, __int64x nCvtFrame, double dlTime, XPVOID lParam);
//////////////////////////////////////////////////////////////////////////
//                      数据结构
//////////////////////////////////////////////////////////////////////////
typedef struct
{
	XCHAR tszFileName[MAX_PATH];                                           //文件地址,要获取list后设置这个值,写到文件是哪儿,如果是回调,表示写的媒体格式
	double dlAVTime;                                                      //媒体长度
	double dlAVTimeStart;                                                 //提取媒体开始时间,如果不需要设置为0
	double dlAVTimeEnd;                                                   //提取媒体结束时间
	int nAVCodecType;                                                     //媒体类型
	int nAVCodecID;                                                       //媒体ID
	int nAVIndex;                                                         //流索引
	CALLBACK_XENGINE_AVCODEC_AVFORMAT_PACKETRW fpCall_Write;     //回调函数,写文件回调,如果为NULL 不通过数据回调
	XPVOID lParam;                                                        //自定义参数
}AVCODEC_FORMATINFO;
typedef struct
{
	int nTimeNum;
	int nTimeDen;
}AVCODEC_TIMEBASE;
typedef struct
{
	int64_t nPTSValue;
	int64_t nDTSValue;
	int64_t nDuration;
}AVCODEC_PACKETINFO;
//////////////////////////////////////////////////////////////////////////
//                      导出函数声明
//////////////////////////////////////////////////////////////////////////
extern "C" XLONG AVFormat_GetLastError(int *pInt_SysError = NULL);
//////////////////////////////////////////////////////////////////////////
/************************************************************************/
/*                      文件转换器导出函数                              */
/************************************************************************/
/********************************************************************
函数名称：AVFormat_Convert_Init
函数功能：初始化一个转换器
 参数.一：pxhNet
  In/Out：Out
  类型：通道句柄
  可空：N
  意思：导出转换器句柄
 参数.二：fpCall_FileConvert
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：转换器过程信息回调
 参数.三：lParam
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：句柄型
  意思：成功返回句柄,失败返回NULL
备注：
*********************************************************************/
extern "C" XHANDLE AVFormat_Convert_Init(CALLBACK_XENGINE_AVCODEC_AVFORMAT_NOTIFY fpCall_FileConvert = NULL, XPVOID lParam = NULL);
/********************************************************************
函数名称：AVFormat_Convert_Output
函数功能：输出信息设置
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的转换器
 参数.二：lpszFile
  In/Out：In
  类型：常量字符还真
  可空：Y
  意思：输出的文件路径
 参数.三：dlAVTimeStart
  In/Out：In
  类型：双精度浮点型
  可空：Y
  意思：输入转换后的开始时间,0不设置
 参数.四：dlAVTimeEnd
  In/Out：In
  类型：双精度浮点型
  可空：Y
  意思：输入转换后的结束时间,0不设置
 参数.五：fpCall_AVFile
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：输出到内存而不是文件,此函数不为NULL,参数2表示要转换到的文件格式
 参数.六：lParam
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Convert_Output(XHANDLE xhNet, LPCXSTR lpszFile = NULL, double dlAVTimeStart = 0, double dlAVTimeEnd = 0, CALLBACK_XENGINE_AVCODEC_AVFORMAT_PACKETRW fpCall_AVFile = NULL, XPVOID lParam = NULL);
/********************************************************************
函数名称：AVFormat_Convert_Input
函数功能：输入要转换的媒体文件
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的转换器
 参数.二：lpszFile
  In/Out：In
  类型：常量字符还真
  可空：Y
  意思：输入要操作的文件路径
 参数.三：pdlAVTime
  In/Out：Out
  类型：浮点型指针
  可空：Y
  意思：输出媒体时间
 参数.四：fpCall_AVFile
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：设置为内存读取文件而不是文件方式
 参数.五：lParam
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：逻辑型
  意思：是否成功
备注：先AVFormat_Convert_Output 在调用此函数
*********************************************************************/
extern "C" bool AVFormat_Convert_Input(XHANDLE xhNet, LPCXSTR lpszFile = NULL, double* pdlAVTime = NULL, CALLBACK_XENGINE_AVCODEC_AVFORMAT_PACKETRW fpCall_AVFile = NULL, XPVOID lParam = NULL);
/********************************************************************
函数名称：AVFormat_Convert_Start
函数功能：开始转换
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的转换器
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Convert_Start(XHANDLE xhNet);
/********************************************************************
函数名称：AVFormat_Convert_Suspend
函数功能：暂停转换或者继续
 参数.一：xhNet
  In/Out：In
  类型：句柄型
  可空：N
  意思：要操作的句柄
 参数.二：bSuspend
  In/Out：In
  类型：逻辑型
  可空：Y
  意思：真为暂停,假为继续
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Convert_Suspend(XHANDLE xhNet, bool bSuspend = true);
/********************************************************************
函数名称：AVFormat_Convert_GetStatus
函数功能：获取一个转换器的运行状态
 参数.一：xhNet
  In/Out：In
  类型：通道句柄
  可空：N
  意思：要获取的状态的句柄
 参数.二：pbConvert
  In/Out：Out
  类型：逻辑指针
  可空：N
  意思：导出是否完成,反正真表示正在转换,假表示完成
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Convert_GetStatus(XHANDLE xhNet, bool *pbConvert);
/********************************************************************
函数名称：AVFormat_Convert_Stop
函数功能：关闭一个文件格式转换器
 参数.一：xhNet
  In/Out：In
  类型：网络句柄
  可空：N
  意思：要关闭的句柄
返回值
  类型：逻辑型
  意思：是否成功
备注：销毁资源必须调用
*********************************************************************/
extern "C" bool AVFormat_Convert_Stop(XHANDLE xhNet);
/********************************************************************
函数名称：AVFormat_Convert_Seek
函数功能：解码跳转器
 参数.一：xhNet
  In/Out：In
  类型：常量字符指针
  可空：N
  意思：要操作的句柄
 参数.二：nTimePos
  In/Out：In
  类型：整数型
  可空：N
  意思：输入跳转时间
返回值
  类型：逻辑型
  意思：是否成功
备注：快进,快退,定位,使用此函数
*********************************************************************/
extern "C" bool AVFormat_Convert_Seek(XHANDLE xhNet, __int64x nTimePos);
/************************************************************************/
/*                      音视频文件封装器导出函数                        */
/************************************************************************/
/********************************************************************
函数名称：AVFormat_Packet_Init
函数功能：初始化一个打包器
 参数.一：fpCall_AVNotify
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：打包通知回调
 参数.二：lPararm
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：句柄型
  意思：成功返回句柄,失败返回NULL
备注：
*********************************************************************/
extern "C" XHANDLE AVFormat_Packet_Init(CALLBACK_XENGINE_AVCODEC_AVFORMAT_NOTIFY fpCall_AVNotify = NULL, XPVOID lPararm = NULL);
/********************************************************************
函数名称：AVFormat_Packet_Output
函数功能：打开输出文件信息
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的打包器
 参数.二：lpszFile
  In/Out：In
  类型：常量字符指针
  可空：Y
  意思：输入要操作的文件
 参数.三：dlAVTimeStart
  In/Out：In
  类型：双精度浮点型
  可空：Y
  意思：要打包的开始时间,单位秒
 参数.四：dlAVTimeEnd
  In/Out：In
  类型：双精度浮点型
  可空：Y
  意思：要打包的结束时间
 参数.五：fpCall_FileWrite
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：内存会写数据回调,如果不想输出到文件,可以使用此回调
 参数.六：lParam
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：逻辑型
  意思：是否成功
备注：如果使用了回调函数,那么第二个参数的意思为输出的格式,比如:flv.mp4
*********************************************************************/
extern "C" bool AVFormat_Packet_Output(XHANDLE xhNet, LPCXSTR lpszFile = NULL, double dlAVTimeStart = 0, double dlAVTimeEnd = 0, CALLBACK_XENGINE_AVCODEC_AVFORMAT_PACKETRW fpCall_FileWrite = NULL, XPVOID lParam = NULL);
/********************************************************************
函数名称：AVFormat_Packet_Input
函数功能：输入要打包的数据信息
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的打包器
 参数.二：lpszFile
  In/Out：In
  类型：常量字符指针
  可空：Y
  意思：输入文件路径,也可以是封装好的媒体文件
 参数.三：pdlTime
  In/Out：Out
  类型：浮点型指针
  可空：Y
  意思：输出时长,如果非封包无法获取
 参数.四：fpCall_Read
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：音视频文件读取回调函数(也可以是封装好的媒体文件)
 参数.五：lParam
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调自定义参数
返回值
  类型：逻辑型
  意思：是否成功
备注：输入的音频或者视频数据可以采用文件和回调内存方式,但是不能同时使用
      必须先调用AVFormat_Packet_Output函数在使用此函数
*********************************************************************/
extern "C" bool AVFormat_Packet_Input(XHANDLE xhNet, LPCXSTR lpszFile = NULL, double* pdlTime = NULL, CALLBACK_XENGINE_AVCODEC_AVFORMAT_PACKETRW fpCall_Read = NULL, XPVOID lParam = NULL);
/********************************************************************
函数名称：AVFormat_Packet_Start
函数功能：开始进行打包
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：要操作的打包器
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Packet_Start(XHANDLE xhNet);
/********************************************************************
函数名称：AVFormat_Packet_GetStatus
函数功能：获取音视频封包状态
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：要获取的状态的句柄
 参数.二：pbPacket
  In/Out：Out
  类型：逻辑指针
  可空：N
  意思：导出是否完成,真表示正在执行,假表示完成
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Packet_GetStatus(XHANDLE xhNet, bool *pbPacket);
/********************************************************************
函数名称：AVFormat_Packet_Suspend
函数功能：设置暂停还是继续
 参数.一：xhNet
  In/Out：In
  类型：网络句柄
  可空：N
  意思：输入要操作的句柄
 参数.二：bSuspend
  In/Out：In
  类型：逻辑型
  可空：Y
  意思：为真为暂停,假为继续
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Packet_Suspend(XHANDLE xhNet, bool bSuspend = true);
/********************************************************************
函数名称：AVFormat_Packet_Stop
函数功能：关闭一个音视频封装器
 参数.一：xhNet
  In/Out：In
  类型：网络句柄
  可空：N
  意思：要关闭的句柄
返回值
  类型：逻辑型
  意思：是否成功
备注：销毁资源必须调用
*********************************************************************/
extern "C" bool AVFormat_Packet_Stop(XHANDLE xhNet);
/********************************************************************
函数名称：AVFormat_Packet_StreamCreate
函数功能：创建一个流
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：要操作的流句柄
 参数.二：pSt_AVParameter
  In/Out：In
  类型：句柄
  可空：N
  意思：输入获取到的音视频参数:AVCodecParameters
返回值
  类型：逻辑型
  意思：是否成功
备注：与AVFormat_Packet_Input和AVFormat_Packet_Start函数互斥,不能同时使用
	  使用此函数创建的流,需要使用AVFormat_Packet_StreamWrite写
*********************************************************************/
extern "C" bool AVFormat_Packet_StreamCreate(XHANDLE xhNet, XHANDLE pSt_AVParameter);
/********************************************************************
函数名称：AVFormat_Packet_StreamWrite
函数功能：写入媒体数据
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：要操作的句柄
 参数.二：nAVIndex
  In/Out：In
  类型：整数型
  可空：N
  意思：数据的媒体索引
 参数.三：lpszMSGBuffer
  In/Out：Out
  类型：常量字符指针
  可空：N
  意思：输入要写的媒体数据
 参数.四：nMSGLen
  In/Out：In
  类型：整数型
  可空：N
  意思：输入媒体数据大小
 参数.五：pSt_AVTimebase
  In/Out：In
  类型：数据结构指针
  可空：Y
  意思：输入原始媒体时间基
 参数.六：pSt_PacketInfo
  In/Out：In
  类型：数据结构指针
  可空：Y
  意思：输入数据的媒体包信息
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Packet_StreamWrite(XHANDLE xhNet, int nAVIndex, LPCXBTR lpszMSGBuffer, int nMSGLen, AVCODEC_TIMEBASE* pSt_AVTimebase, AVCODEC_PACKETINFO* pSt_PacketInfo = NULL);
/************************************************************************/
/*                      音视频文件解封装器导出函数                      */
/************************************************************************/
/********************************************************************
函数名称：AVFormat_UNPack_Init
函数功能：初始化一个文件解封包器
 参数.一：fpCall_AVNotify
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：文件解复用操作进度回调
 参数.二：lParam
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：句柄型
  意思：成功返回句柄,失败返回NULL
备注：
*********************************************************************/
extern "C" XHANDLE AVFormat_UNPack_Init(CALLBACK_XENGINE_AVCODEC_AVFORMAT_NOTIFY fpCall_AVNotify = NULL, XPVOID lParam = NULL);
/********************************************************************
函数名称：AVFormat_UNPack_Input
函数功能：设置输入数据流
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的句柄
 参数.二：lpszFile
  In/Out：In
  类型：常量字符指针
  可空：N
  意思：要解封包的文件
 参数.三：fpCall_FileRead
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：如果此值不为NULL,表示从内存读取数据
 参数.四：lParam
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_UNPack_Input(XHANDLE xhNet, LPCXSTR lpszFile, CALLBACK_XENGINE_AVCODEC_AVFORMAT_PACKETRW fpCall_FileRead = NULL, XPVOID lParam = NULL);
/********************************************************************
函数名称：AVFormat_UNPack_GetList
函数功能：获取媒体文件所有流信息
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入可操作句柄
 参数.二：pppSt_ListFile
  In/Out：Out
  类型：三级指针
  可空：N
  意思：输出媒体列表
 参数.三：pInt_ListCount
  In/Out：Out
  类型：整数型指针
  可空：N
  意思：输出列表个数
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_UNPack_GetList(XHANDLE xhNet, AVCODEC_FORMATINFO * **pppSt_ListFile, int* pInt_ListCount);
/********************************************************************
函数名称：AVFormat_UNPack_Output
函数功能：配置输出数据流
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的句柄
 参数.二：pppSt_ListFile
  In/Out：In
  类型：三级指针
  可空：N
  意思：输入文件列表信息
 参数.三：nListCount
  In/Out：In
  类型：整数型
  可空：N
  意思：文件列表个数
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_UNPack_Output(XHANDLE xhNet, AVCODEC_FORMATINFO * **pppSt_ListFile, int nListCount);
/********************************************************************
函数名称：AVFormat_UNPack_Start
函数功能：开始处理
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：要操作的句柄
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_UNPack_Start(XHANDLE xhNet);
/********************************************************************
函数名称：AVFormat_UNPack_Read
函数功能：读取媒体数据
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：要操作的句柄
 参数.二：pInt_AVIndex
  In/Out：Out
  类型：整数型指针
  可空：N
  意思：输出读取到的数据的媒体索引
 参数.三：ptszMSGBuffer
  In/Out：Out
  类型：字符指针
  可空：N
  意思：输出读取到的媒体数据
 参数.四：pInt_MSGLen
  In/Out：Out
  类型：整数型指针
  可空：N
  意思：输出数据大小
 参数.五：pSt_AVPacket
  In/Out：Out
  类型：数据结构指针
  可空：Y
  意思：输出包信息
 参数.六：pSt_Timebase
  In/Out：Out
  类型：数据结构指针
  可空：Y
  意思：输出包时间基
返回值
  类型：逻辑型
  意思：是否成功
备注：与AVFormat_UNPack_Start函数互斥,不能同时使用
*********************************************************************/
extern "C" bool AVFormat_UNPack_Read(XHANDLE xhNet, int* pInt_AVIndex, XBYTE* ptszMSGBuffer, int* pInt_MSGLen, AVCODEC_PACKETINFO* pSt_AVPacket = NULL, AVCODEC_TIMEBASE* pSt_Timebase = NULL);
/********************************************************************
函数名称：AVFormat_UNPack_GetStatus
函数功能：获取音视频解封包状态
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：要获取的状态的句柄
 参数.二：pbPacket
  In/Out：Out
  类型：逻辑指针
  可空：N
  意思：导出是否完成,真表示正在执行,假表示完成
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_UNPack_GetStatus(XHANDLE xhNet, bool *pbPacket);
/********************************************************************
函数名称：AVFormat_UNPack_Suspend
函数功能：设置暂停还是继续
 参数.一：xhNet
  In/Out：In
  类型：网络句柄
  可空：N
  意思：输入要操作的句柄
 参数.二：bSuspend
  In/Out：In
  类型：逻辑型
  可空：Y
  意思：为真为暂停,假为继续
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_UNPack_Suspend(XHANDLE xhNet, bool bSuspend = true);
/********************************************************************
函数名称：AVFormat_UNPack_Seek
函数功能：移动当前媒体索引位置
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的媒体
 参数.二：nStreamIndex
  In/Out：In
  类型：整数型
  可空：N
  意思：输入要操作的媒体的索引
 参数.三：nTime
  In/Out：In
  类型：整数型
  可空：N
  意思：输入移动的时间戳
返回值
  类型：逻辑型
  意思：是否成功
备注：建议先暂停在移动位置
*********************************************************************/
extern "C" bool AVFormat_UNPack_Seek(XHANDLE xhNet, int nStreamIndex, __int64u nTime);
/********************************************************************
函数名称：AVFormat_UNPack_Stop
函数功能：关闭一个音视频解封装器
 参数.一：xhNet
  In/Out：In
  类型：网络句柄
  可空：N
  意思：要关闭的句柄
返回值
  类型：逻辑型
  意思：是否成功
备注：销毁资源必须调用
*********************************************************************/
extern "C" bool AVFormat_UNPack_Stop(XHANDLE xhNet);
/********************************************************************
函数名称：AVFormat_UNPack_GetCodec
函数功能：获取流信息
 参数.一：xhNet
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的流
 参数.二：nAVIndex
  In/Out：In
  类型：整数型
  可空：N
  意思：输入要操作的索引
 参数.三：pSt_AVParameter
  In/Out：Out
  类型：二级指针
  可空：Y
  意思：输出获取的编解码参数信息,AVCodecParameters类型.此参数需要释放内存
 参数.四：pInt_TimeNum
  In/Out：Out
  类型：整数型指针
  可空：Y
  意思：输出获取的时间基
 参数.五：pInt_TimeDen
  In/Out：Out
  类型：整数型指针
  可空：Y
  意思：输出获取的时间基
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_UNPack_GetCodec(XHANDLE xhNet, int nAVIndex, XHANDLE* pSt_AVParameter = NULL, int* pInt_TimeNum = NULL, int* pInt_TimeDen = NULL);
/************************************************************************/
/*                      媒体文件连接导出函数                            */
/************************************************************************/
/********************************************************************
函数名称：AVFormat_Link_Init
函数功能：初始化一个连接器
 参数.一：fpCall_AVNotify
  In/Out：In/Out
  类型：回调函数
  可空：Y
  意思：通知回调
 参数.二：lPararm
  In/Out：In/Out
  类型：无类型指针
  可空：Y
  意思：回调函数自定义参数
返回值
  类型：句柄型
  意思：成功返回句柄,失败返回NULL
备注：
*********************************************************************/
extern "C" XHANDLE AVFormat_Link_Init(CALLBACK_XENGINE_AVCODEC_AVFORMAT_NOTIFY fpCall_AVNotify = NULL, XPVOID lPararm = NULL);
/********************************************************************
函数名称：AVFormat_Link_Output
函数功能：打开输出文件信息
 参数.一：xhToken
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的打包器
 参数.二：lpszFile
  In/Out：In
  类型：常量字符指针
  可空：Y
  意思：输入要操作的文件
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Link_Output(XHANDLE xhToken, LPCXSTR lpszFile);
/********************************************************************
函数名称：AVFormat_Link_Input
函数功能：输入要连接的媒体文件
 参数.一：xhToken
  In/Out：In
  类型：句柄
  可空：N
  意思：输入要操作的连接器
 参数.二：lpszFile
  In/Out：In
  类型：常量字符指针
  可空：N
  意思：输入文件路径
 参数.三：dlAVTimeStart
  In/Out：In
  类型：浮点型
  可空：Y
  意思：输入开始时间,为0表示全部
 参数.四：dlAVTimeEnd
  In/Out：In
  类型：浮点型
  可空：Y
  意思：输出结束时间
 参数.五：nVideoIndex
  In/Out：In
  类型：整数型
  可空：Y
  意思：输入要使用的视频索引
 参数.六：nAudioIndex
  In/Out：In
  类型：整数型
  可空：Y
  意思：输入要使用的音频索引
返回值
  类型：逻辑型
  意思：是否成功
备注：需要先调用AVFormat_Link_Output在调用AVFormat_Link_Input
*********************************************************************/
extern "C" bool AVFormat_Link_Input(XHANDLE xhToken, LPCXSTR lpszFile, double dlAVTimeStart = 0, double dlAVTimeEnd = 0, int nVideoIndex = -1, int nAudioIndex = -1);
/********************************************************************
函数名称：AVFormat_Link_Start
函数功能：开始进行连接
 参数.一：xhToken
  In/Out：In
  类型：句柄
  可空：N
  意思：要操作的句柄
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Link_Start(XHANDLE xhToken);
/********************************************************************
函数名称：AVFormat_Link_GetStatus
函数功能：获取媒体连接状态
 参数.一：xhToken
  In/Out：In
  类型：句柄
  可空：N
  意思：要获取的句柄
 参数.二：pbPacket
  In/Out：Out
  类型：逻辑指针
  可空：N
  意思：导出是否完成,真表示正在执行,假表示完成
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Link_GetStatus(XHANDLE xhToken, bool* pbLink);
/********************************************************************
函数名称：AVFormat_Link_Suspend
函数功能：设置暂停还是继续
 参数.一：xhToken
  In/Out：In
  类型：网络句柄
  可空：N
  意思：输入要操作的句柄
 参数.二：bSuspend
  In/Out：In
  类型：逻辑型
  可空：Y
  意思：为真为暂停,假为继续
返回值
  类型：逻辑型
  意思：是否成功
备注：
*********************************************************************/
extern "C" bool AVFormat_Link_Suspend(XHANDLE xhToken, bool bSuspend = true);
/********************************************************************
函数名称：AVFormat_Link_Stop
函数功能：关闭一个连接器
 参数.一：xhToken
  In/Out：In
  类型：网络句柄
  可空：N
  意思：要关闭的句柄
返回值
  类型：逻辑型
  意思：是否成功
备注：销毁资源必须调用
*********************************************************************/
extern "C" bool AVFormat_Link_Stop(XHANDLE xhToken);